{"version":3,"sources":["node_modules/ol/AssertionError.js","node_modules/ol/events/Event.js","node_modules/ol/ObjectEventType.js","node_modules/ol/Disposable.js","node_modules/ol/array.js","node_modules/ol/functions.js","node_modules/ol/obj.js","node_modules/ol/events/Target.js","node_modules/ol/events/EventType.js","node_modules/ol/events.js","node_modules/ol/Observable.js","node_modules/ol/util.js","node_modules/ol/Object.js","node_modules/ol/CollectionEventType.js","node_modules/ol/Collection.js","node_modules/ol/asserts.js","node_modules/ol/Feature.js","node_modules/ol/has.js","node_modules/ol/transform.js","node_modules/ol/extent/Relationship.js","node_modules/ol/extent.js","node_modules/ol/proj/Units.js","node_modules/ol/proj/Projection.js","node_modules/ol/proj/epsg3857.js","node_modules/ol/proj/epsg4326.js","node_modules/ol/proj/projections.js","node_modules/ol/proj/transforms.js","node_modules/ol/math.js","node_modules/ol/string.js","node_modules/ol/coordinate.js","node_modules/ol/sphere.js","node_modules/ol/console.js","node_modules/ol/proj.js","node_modules/ol/geom/flat/transform.js","node_modules/ol/geom/Geometry.js","node_modules/ol/geom/SimpleGeometry.js","node_modules/ol/geom/flat/closest.js","node_modules/ol/geom/flat/deflate.js","node_modules/ol/geom/flat/simplify.js","node_modules/ol/geom/flat/inflate.js","node_modules/ol/geom/flat/area.js","node_modules/ol/geom/LinearRing.js","node_modules/ol/geom/Point.js","node_modules/ol/geom/flat/contains.js","node_modules/ol/geom/flat/interiorpoint.js","node_modules/ol/geom/flat/segments.js","node_modules/ol/geom/flat/intersectsextent.js","node_modules/ol/geom/flat/reverse.js","node_modules/ol/geom/flat/orient.js","node_modules/ol/geom/Polygon.js","node_modules/ol/Geolocation.js","node_modules/ol/render/EventType.js","node_modules/ol/style/Fill.js","node_modules/ol/geom/flat/interpolate.js","node_modules/ol/geom/flat/length.js","node_modules/ol/geom/LineString.js","node_modules/ol/style/Stroke.js","node_modules/ol/ImageState.js","node_modules/ol/size.js","node_modules/ol/style/Image.js","node_modules/ol/color.js","node_modules/ol/colorlike.js","node_modules/ol/dom.js","node_modules/ol/css.js","node_modules/ol/render/canvas.js","node_modules/ol/style/RegularShape.js","node_modules/ol/style/Circle.js","node_modules/ol/style/Style.js","node_modules/ol/style/Text.js","node_modules/ol/layer/Property.js","node_modules/ol/layer/Base.js","node_modules/ol/ViewHint.js","node_modules/ol/ViewProperty.js","node_modules/ol/tilegrid/common.js","node_modules/ol/centerconstraint.js","node_modules/ol/resolutionconstraint.js","node_modules/ol/rotationconstraint.js","node_modules/ol/easing.js","node_modules/ol/View.js","node_modules/ol/layer/Layer.js","node_modules/rbush/rbush.min.js","node_modules/ol/style/IconImageCache.js","node_modules/ol/ImageBase.js","node_modules/ol/Image.js","node_modules/ol/style/IconImage.js","node_modules/ol/style/Icon.js","node_modules/ol/style/flat.js","node_modules/ol/layer/BaseVector.js","node_modules/ol/render/canvas/Instruction.js","node_modules/ol/render/VectorContext.js","node_modules/ol/render/canvas/Builder.js","node_modules/ol/render/canvas/ImageBuilder.js","node_modules/ol/render/canvas/LineStringBuilder.js","node_modules/ol/render/canvas/PolygonBuilder.js","node_modules/ol/geom/flat/linechunk.js","node_modules/ol/geom/flat/straightchunk.js","node_modules/ol/render/canvas/TextBuilder.js","node_modules/ol/render/canvas/BuilderGroup.js","node_modules/ol/renderer/Layer.js","node_modules/ol/render/Event.js","node_modules/ol/renderer/canvas/Layer.js","node_modules/ol/geom/flat/textpath.js","node_modules/ol/render/canvas/Executor.js","node_modules/ol/render/canvas/ExecutorGroup.js","node_modules/ol/render/canvas/Immediate.js","node_modules/ol/style.js","node_modules/ol/render/canvas/hitdetect.js","node_modules/ol/renderer/vector.js","node_modules/ol/renderer/canvas/VectorLayer.js","node_modules/ol/layer/Vector.js","node_modules/ol/structs/RBush.js","node_modules/ol/source/Source.js","node_modules/ol/source/VectorEventType.js","node_modules/ol/loadingstrategy.js","node_modules/ol/featureloader.js","node_modules/ol/source/Vector.js","node_modules/ol/render.js","node_modules/ol/geom/flat/geodesic.js","node_modules/ol/layer/Graticule.js","node_modules/ol/ImageCanvas.js","node_modules/ol/TileState.js","node_modules/ol/Tile.js","node_modules/ol/ImageTile.js","node_modules/ol/Kinetic.js","node_modules/ol/renderer/Map.js","node_modules/ol/renderer/Composite.js","node_modules/ol/layer/Group.js","node_modules/ol/MapEvent.js","node_modules/ol/MapBrowserEvent.js","node_modules/ol/MapBrowserEventType.js","node_modules/ol/pointer/EventType.js","node_modules/ol/MapBrowserEventHandler.js","node_modules/ol/MapEventType.js","node_modules/ol/MapProperty.js","node_modules/ol/structs/PriorityQueue.js","node_modules/ol/TileQueue.js","node_modules/ol/control/Control.js","node_modules/ol/control/Attribution.js","node_modules/ol/control/Rotate.js","node_modules/ol/control/Zoom.js","node_modules/ol/control/defaults.js","node_modules/ol/interaction/Property.js","node_modules/ol/interaction/Interaction.js","node_modules/ol/interaction/DoubleClickZoom.js","node_modules/ol/interaction/Pointer.js","node_modules/ol/events/condition.js","node_modules/ol/interaction/DragPan.js","node_modules/ol/interaction/DragRotate.js","node_modules/ol/render/Box.js","node_modules/ol/interaction/DragBox.js","node_modules/ol/interaction/DragZoom.js","node_modules/ol/events/Key.js","node_modules/ol/interaction/KeyboardPan.js","node_modules/ol/interaction/KeyboardZoom.js","node_modules/ol/interaction/MouseWheelZoom.js","node_modules/ol/interaction/PinchRotate.js","node_modules/ol/interaction/PinchZoom.js","node_modules/ol/interaction/defaults.js","node_modules/ol/Map.js","node_modules/ol/Overlay.js","node_modules/ol/structs/LRUCache.js","node_modules/ol/tilecoord.js","node_modules/ol/TileCache.js","node_modules/ol/TileRange.js","node_modules/ol/VectorRenderTile.js","node_modules/ol/VectorTile.js","node_modules/ol/index.js","node_modules/ol/reproj/common.js","node_modules/ol/reproj/Triangulation.js","node_modules/ol/reproj.js","node_modules/ol/reproj/Tile.js","node_modules/ol/source/TileEventType.js","node_modules/ol/tilegrid/TileGrid.js","node_modules/ol/tilegrid.js","node_modules/ol/source/Tile.js","node_modules/ol/tileurlfunction.js","node_modules/ol/source/UrlTile.js","node_modules/ol/source/TileImage.js","node_modules/ol/source/wms.js","node_modules/ol/uri.js","node_modules/ol/source/TileWMS.js","node_modules/ol/layer/TileProperty.js","node_modules/ol/layer/BaseTile.js","node_modules/ol/renderer/canvas/TileLayer.js","node_modules/ol/layer/Tile.js","Map.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["messages","AssertionError","_Error","_inherits","_super","_createSuper","code","_this","_classCallCheck","message","call","name","_createClass","_wrapNativeSuper","Error","_default","exports","default","BaseEvent","type","propagationStopped","defaultPrevented","target","key","value","preventDefault","stopPropagation","evt","PROPERTYCHANGE","Disposable","disposed","dispose","disposeInternal","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","length","found","a","b","descending","linearFindNearest","arr","direction","n","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","remove","obj","indexOf","splice","equals","arr1","arr2","len1","stableSort","compareFnc","index","sort","isSorted","func","strict","compare","every","currentVal","res","_array","require","TRUE","FALSE","VOID","memoizeOne","fn","called","lastResult","lastArgs","lastThis","nextArgs","prototype","slice","arguments","arrayEquals","apply","toPromise","getter","promiseGetter","err","Promise","reject","resolve","clear","object","property","isEmpty","_Disposable2","_interopRequireDefault","_Event","_functions","_obj","__esModule","_typeof","Symbol","iterator","constructor","instance","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","Number","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","Target","_Disposable","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","hasListener","keys","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","listen","thisArg","once","originalListener","eventsKey","listenOnce","unlistenByKey","_Target","_EventType","_events","Observable","_EventTarget","on","onInternal","onceInternal","un","unInternal","revision_","changed","EventType","getRevision","len","ol_key","unByKey","EventTarget","abstract","uidCounter_","getUid","ol_uid","VERSION","_Event2","_ObjectEventType","_Observable2","_util","ObjectEvent","oldValue","BaseObject","_Observable","_super2","values","_this2","values_","setProperties","get","hasOwnProperty","getKeys","getProperties","assign","hasProperties","notify","eventType","concat","ObjectEventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","ADD","REMOVE","_AssertionError","_Object","_CollectionEventType","Property","LENGTH","CollectionEvent","element","Collection","_BaseObject","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","forEach","f","getArray","item","insertAt","elem","CollectionEventType","removeAt","prev","setAt","except","assert","assertion","errorCode","_asserts","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","createStyleFunction","setId","id","styles","getZIndex","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","SAFARI_BUG_237906","test","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","window","error","_has","tmp_","reset","transform","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","setFromArray","coordinate","x","y","rotate","angle","cos","Math","sin","scale","makeScale","translate","dx","dy","compose","dx1","dy1","sx","sy","dx2","dy2","composeCssTransform","toString","invert","makeInverse","det","determinant","mat","transformStringDiv","transformString","join","node","document","createElement","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","_Relationship","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","from","_i","_s","_e","_x","_r","_arr","_n","_d","next","done","return","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","dest","minX","min","minY","maxX","max","maxY","createOrUpdate","buffer","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","Infinity","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","createOrUpdateFromRings","rings","extendRings","approximatelyEquals","tolerance","abs","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getEnlargedArea","getForViewAndSize","center","resolution","rotation","size","_getRotatedViewport","getRotatedViewport","_getRotatedViewport2","x0","y0","x1","y1","x2","y2","x3","y3","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersectionArea","intersection","getIntersection","intersects","getMargin","getSize","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","width","height","l","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","worldsAway","floor","wrapAndSliceX","isFinite","unitByCode","fromCode","METERS_PER_UNIT","PI","_Units","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","_Projection2","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","_Projection","point","cosh","PROJECTIONS","fromEPSG4326","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","cache","replace","add","transforms","destination","sourceCode","destinationCode","clamp","squaredSegmentDistance","t","squaredDistance","solveLinearSystem","maxRow","maxEl","r","absValue","j","coef","k","m","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","pow","round","ceil","padNumber","number","precision","numberString","decimal","compareVersions","v1","v2","s1","split","s2","n1","parseInt","n2","_extent","_math","_string","delta","closestOnCircle","circle","getRadius","sqrt","closestOnSegment","segment","along","createStringXY","fractionDigits","toStringXY","degreesToStringHDMS","hemispheres","degrees","normalizedDegrees","deg","sec","hdms","charAt","format","template","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","distance","squaredDistanceToSegment","toStringHDMS","getWorldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getType","coords","jj","getCoordinates","geometries","getGeometries","getAreaInternal","bearing","lon1","dByR","lat","asin","lon","levels","info","warn","none","level","setLevel","args","_console","console","_console2","_console3","_epsg","_epsg2","_projections","_transforms","_coordinate","_sphere","showCoordinateWarning","disableCoordinateWarning","disable","hide","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","clearAllProjections","clearProj","clearTransformFuncs","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","addCoordinateTransforms","forward","inverse","sourceProj","destProj","fromLonLat","toLonLat","lonLat","equivalent","equalUnits","transformFunc","sourceProjection","destinationProjection","getTransformFunc","getTransform","transformExtent","transformWithProjections","userProjection","setUserProjection","clearUserProjection","getUserProjection","useGeographic","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceUnits","userUnits","fromUserResolution","createSafeCoordinateTransform","coord","transformed","sourceExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","transform2D","anchor","anchorX","anchorY","_transform","_extent2","_proj","_transform2","tmpTransform","createTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","simplify","intersectsExtent","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","_Geometry2","SimpleGeometry","_Geometry","layout","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","setLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","simplifyLineString","highQuality","radialDistance","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","douglasPeuckerMultiArray","simplifiedEndss","snap","quantize","quantizeArray","quantizeMultiArray","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","linearRingss","_SimpleGeometry2","_closest","_deflate","_simplify","_inflate","_area","LinearRing","_SimpleGeometry","maxDelta_","maxDeltaRevision_","linearRingArea","Point","linearRingContainsExtent","outside","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","_contains","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","_segments","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","_reverse","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverse","reverseCoordinates","orientLinearRingsArray","inflateEnds","prevEndIndex","_LinearRing","_Point","_interiorpoint","_intersectsextent","_orient","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","circular","sphereRadius","sphereOffset","fromExtent","fromCircle","sides","arrayLength","makeRegular","startAngle","_Polygon","_get","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","ACCURACY","ACCURACY_GEOMETRY","ALTITUDE","ALTITUDE_ACCURACY","HEADING","POSITION","PROJECTION","SPEED","TRACKING","TRACKING_OPTIONS","GeolocationErrorType","GeolocationError","_BaseEvent","Geolocation","position_","transform_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","position","accuracy","altitude","altitudeAccuracy","heading","longitude","latitude","projectedPosition","speed","circularPolygon","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","Fill","color_","color","getColor","setColor","interpolatePoint","fraction","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","m1","lineStringsCoordinateAtM","interpolate","lineStringLength","linearRingLength","perimeter","_interpolate","_length","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","getCoordinateAtM","getCoordinateAt","getFlatMidpoint","Stroke","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","setLineCap","setLineDash","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","IDLE","LOADING","LOADED","EMPTY","num","hasArea","ratio","toSize","_size","ImageStyle","opacity_","opacity","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getOpacity","getRotation","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImage","pixelRatio","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","setDisplacement","setOpacity","setRotateWithView","setRotation","setScale","listenImageChange","load","unlistenImageChange","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","fromString","MAX_CACHE_SIZE","cacheSize","s","fromStringInternal_","asArray","g","exec","hasAlpha","substr","startsWith","map","normalize","isStringColor","_color","asColorLike","createCanvasContext2D","canvasPool","settings","canvas","shift","getContext","releaseCanvas","context","clearRect","outerWidth","offsetWidth","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","_dom","_css","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","measureFont","textHeights","registerFont","retries","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","display","left","measureAndCacheTextWidth","reduce","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","rotateAtOffset","offsetX","offsetY","drawImageOrLabel","labelOrImage","originX","originY","w","h","save","globalAlpha","setTransform","contextInstructions","executeLabelInstructions","drawImage","restore","label","_ImageState","_Image","_colorlike","_canvas","RegularShape","_ImageStyle","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius_","radius1","radius2_","radius2","angle_","stroke_","stroke","size_","renderOptions_","render","getFill","getPoints","getRadius2","getAngle","getStroke","setFill","createHitDetectionCanvas_","image","renderOptions","draw_","ImageState","setStroke","calculateLineJoinSize_","strokeWidth","r1","r2","alpha","miterRatio","maxr","bevelAdd","aa","bb","dd","ee","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","maxRadius","createPath_","fillStyle","drawHitDetectionCanvas_","arc","step","angle0","radiusC","lineTo","closePath","_RegularShape2","CircleStyle","_RegularShape","setRadius","_Circle","_Fill","_Stroke","Style","geometry_","geometryFunction_","defaultGeometryFunction","image_","renderer_","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","zIndex","getRenderer","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setImage","setText","feature","setZIndex","toFunction","styleFunction","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","DEFAULT_FILL_COLOR","Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","_Property","BaseLayer","background_","background","LayerProperty","visible","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","state","layer","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setVisible","zindex","ANIMATING","INTERACTING","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","easeIn","easeOut","inAndOut","linear","upAndDown","_ViewHint","_ViewProperty","_common","_centerconstraint","_resolutionconstraint","_rotationconstraint","_easing","DEFAULT_MIN_ZOOM","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","getUpdatedOptions_","newOptions","getZoom","animate","var_args","isDef","getAnimating","resolveConstraints","animateInternal","animationCount","animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","constrainResolution","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","getState","reducedSize","calculateCenterOn","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","fitInternal","rotatedExtentForGeometry","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","returnValue","setTimeout","smoothExtentConstraint","constrainOnlyCenter","multiWorld","centerNone","defaultMaxZoom","defaultZoomFactor","smoothResolutionConstraint","projExtent","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","rotationNone","coordinatesEqual","_Base","_EventType2","_View","Layer","_BaseLayer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","getData","isVisible","view","_this3","frameState","getMapInternal","getView","layerStatesArray","getLayerGroup","layerState","find","layerExtent","inView","getAttributions","attributions","layerRenderer","prepareFrame","renderFrame","unrender","setMapInternal","RenderEventType","renderEvent","some","arrayLayerState","createRenderer","hasRenderer","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","getKey","setSize","maxCacheSize","colorString","shared","ImageBase","pixelRatio_","_ImageBase2","ImageWrapper","_ImageBase","imageLoadFunction","src_","context_","unlisten_","imageLoadFunction_","HTMLCanvasElement","handleImageError_","unlistenImage_","handleImageLoad_","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","then","catch","unlisten","_IconImageCache","taintedTestContext","IconImage","imageState","hitDetectionImage_","crossOrigin_","imageState_","tainted_","initializeImage_","isTainted_","willReadFrequently","getImageData","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","ctx","globalCompositeOperation","iconImageCache","_IconImage","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","imgSize_","imgSize","iconImage_","getIconImage","offset_","offsetOrigin_","offsetOrigin","_options$size","initialOptions_","onload","imageSize","setAnchor","iconImageSize","_Icon","_Style","_Text","toStyle","flatStyle","prefix","iconSrc","iconImg","icon","shapePoints","shape","circleRadius","Circle","_Layer2","_rbush","_interopRequireWildcard","_flat","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","has","newObj","hasPropertyDescriptor","RENDER_ORDER","BaseVectorLayer","_Layer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","renderDeclutter","declutterTree","RBush","setRenderOrder","renderOrder","styleLike","toStyleFunction","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","_Instruction","_VectorContext2","CanvasBuilder","_VectorContext","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","skipped","lastRel","nextRel","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","getEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","_Builder","CanvasImageBuilder","_CanvasBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","sharedData","origin","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","_currentChunk$slice","_currentChunk$slice2","missing","matchingChunk","chunkStart","chunkEnd","acos","m12","m23","x12","y12","x23","y23","_linechunk","_straightchunk","TEXT_ALIGN","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","flatOffset","oo","cc","chunk","chunkBegin","range","drawChars_","geometryWidths","getFlatMidpoints","getFlatInteriorPoints","beg","keep","saveTextStates_","p0","p1","p2","p3","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","_ImageBuilder","_LineStringBuilder","_PolygonBuilder","_TextBuilder","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","LayerRenderer","ready","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","tile","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","forEachFeatureAtCoordinate","hitTolerance","matches","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","RenderEvent","inversePixelTransform","pixelContext","createPixelContext","CanvasLayerRenderer","_LayerRenderer","container","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","beginPath","moveTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","substring","_textpath","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","_getTextDimensions","renderWidth","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","previousFont","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","pixelCoordinates","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","insert","imageArgs","imageDeclutterBox","collides","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","execute","executeHitDetection","_Executor","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","iter","ORDER","ExecutorGroup","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","indexes","getPixelIndexArray","imageData","idx","zs","executor","builderTypes","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","pixelIndex","CanvasImmediateRenderer","userTransform","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","_Immediate","_style","HIT_DETECT_RESOLUTION","createHitDetectionImageData","features","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","declutterBuilderGroup","circleReplay","textReplay","renderFeature","replayGroup","loading","renderFeatureInternal","renderGeometry","geometryRenderer","lineStringReplay","polygonReplay","imageBuilderGroup","imageReplay","textBuilderGroup","_BuilderGroup","_ExecutorGroup","_hitdetect","_vector","CanvasVectorLayerRenderer","_CanvasLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","compositionContext_","renderWorlds","executorGroup","vectorSource","viewHints","getWrapX","endWorld","world","setupCompositionContext_","compositionContext","releaseCompositionContext_","layerIndex","transformToString","hasRenderListeners","clipped","lastIndexOf","executorGroups","all","_this4","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","gutter","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","userExtent","loadFeatures","getSquaredRenderTolerance","dirty","getFeaturesInExtent","replayGroupInstructions","getOverlaps","_BaseVector","_VectorLayer","VectorLayer","_BaseVectorLayer","maxEntries","rbush_","RBush_","items_","extents","items","uid","update","bbox","getAll","getInExtent","search","forEach_","forEachInExtent","toJSON","rbush","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","getAttributionsCollapsible","getInterpolate","refresh","setAttributions","setState","attributionLike","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","getZForResolution","getTileRangeForExtentAndZ","getTileCoordExtent","withCredentials","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","setWithCredentials","xhrWithCredentials","_Collection","_RBush","_Source2","_VectorEventType","_loadingstrategy","_featureloader","VectorSourceEvent","VectorSource","_Source","loader_","format_","url_","loader","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","collection","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","_this5","_ref","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","_this6","loadedExtentsRtree","extentsToLoad","_loop","extentToLoad","alreadyLoaded","removeLoadedExtent","featureChangeKeys","removed","setLoader","setUrl","toContext","scaleTransform","getVectorContext","CanvasRenderingContext2D","canvasPixelRatio","multiplyTransform","getRenderPixel","geoA","geoB","geoStack","fractionStack","fractions","maxIterations","geoM","fracA","fracB","fracM","greatCircleArc","lon2","geoProjection","cosLat1","sinLat1","cosLat2","sinLat2","cosDeltaLon","sinDeltaLon","frac","D","cosD","sinD","meridian","epsg4326Projection","parallel","_Feature","_LineString","_Vector","_Vector2","_render","_geodesic","DEFAULT_STROKE_STYLE","INTERVALS","Graticule","maxLines","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","maxLat_","maxLon_","minLat_","minLon_","maxX_","maxY_","minX_","minY_","targetSize_","maxLines_","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","bottomLeft_","bottomRight_","topLeft_","topRight_","meridiansLabels_","parallelsLabels_","lonLabelFormatter_","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleBase_","lonLabelStyle_","latLabelStyleBase_","latLabelStyle_","drawLabels_","intervals_","loaderFunction","strategyFunction","featurePool_","lineStyle_","loadedExtent_","realWorldExtent","renderExtent","updateProjectionInfo","equivalentProjection","updateProjectionInfo_","createGraticule_","featuresColl","poolIndex","addMeridian_","minLat","maxLat","getMeridian_","geom","addParallel_","minLon","maxLon","getParallel_","rotationCenter","rotationExtent","unrotatedWidth","unrotatedHeight","startWorld","labelsAtStart","vectorContext","textPoint","getMeridianPoint_","getParallelPoint_","getInterval_","validCenterP","centerLonLat","centerLon","centerLat","cnt","validExtentP","validExtent","clampedLat","dist","bottom","top","clampedBottom","clampedTop","coordinate0","getMeridians","clampedLeft","clampedRight","getParallels","toLonLatTransform","lonLatCoordinates","worldExtentP","ImageCanvas","error_","getError","handleLoad_","_TileState","Tile","interimTile","transition_","transition","transitionStarts_","release","TileState","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","time","inTransition","endTransition","_Tile2","ImageTile","_Tile","tileLoadFunction","tileLoadFunction_","getBlankImage","naturalWidth","naturalHeight","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","MapRenderer","map_","dispatchRenderEvent","calculateMatrices2D","pixelToCoordinateTransform","checkWrapped","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","order","hasFeatureAtCoordinate","getMap","flushDeclutterItems","scheduleExpireIconCache","postRenderFunctions","expireIconCache","_Map","CompositeMapRenderer","_MapRenderer","fontChangeListenerKey_","redrawText","element_","getViewport","firstChild","children_","renderedVisible_","declutterLayers_","declutterLayers","previousElement","sourceState","layers","GroupEvent","LAYERS","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","currentLayers","pos","ownLayerState","defaultZIndex","MapEvent","_MapEvent2","MapBrowserEvent","_MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","_MapBrowserEvent","_MapBrowserEventType","_Target2","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","MOVESTART","MOVEEND","LOADSTART","LOADEND","LAYERGROUP","SIZE","TARGET","VIEW","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","_PriorityQueue2","TileQueue","_PriorityQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","_MapEventType","Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","MapEventType","mapEvent","getElementById","_Control2","Attribution","_Control","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","Set","getAllLayers","flatMap","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","contains","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","_Attribution","_Rotate","_Zoom","defaults","controls","zoomControl","zoomOptions","rotateControl","rotateOptions","attributionControl","attribution","attributionOptions","ACTIVE","Interaction","setActive","getActive","InteractionProperty","mapBrowserEvent","active","pan","zoomByDelta","_Interaction2","DoubleClickZoom","_Interaction","delta_","stopEvent","browserEvent","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","centroid","conditions","pass","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","focus","targetElement","getTargetElement","activeElement","focusWithTabindex","hasAttribute","always","click","mouseActionButton","never","pointerMove","singleClick","doubleClick","noModifierKeys","platformModifierKeyOnly","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","touchOnly","pointerEvt","penOnly","primaryAction","isPrimary","_Pointer","_condition","DragPan","_PointerInteraction","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroidFromPointers","scaleCoordinate","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","DragRotate","lastAngle_","RenderBox","startPixel_","endPixel_","render_","startPixel","endPixel","px","getOverlayContainer","setPixels","createOrUpdateGeometry","pixels","_Box","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","BOXCANCEL","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","_DragBox2","DragZoom","_DragBox","out_","out","UP","DOWN","_Key","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","KeyboardZoom","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","_DoubleClickZoom","_DragPan","_DragRotate","_DragZoom","_KeyboardPan","_KeyboardZoom","_Kinetic","_MouseWheelZoom","_PinchRotate","_PinchZoom","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","_Composite","_Group","_MapBrowserEventHandler","_MapProperty","_EventType3","_TileQueue","_defaults","_defaults2","removeLayerMapProperty","setLayerMapProperty","Map","optionsInternal","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","defaultControls","defaultInteractions","overlays_","overlays","overlayIdIndex_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","addLayersFrom","layerGroup","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewport","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","getPixelFromCoordinate","viewCoordinate","ownerDocument","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","cont","handlePostRender","tileQueue","lowOnFrameBudget","unobserve","ShadowRoot","host","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","usedTiles","mapId","renderTargets","nextExtent","moveStart","equalsExtent","idle","setLayerGroup","oldLayerGroup","computedStyle","parseFloat","getClientRects","oldSize","ELEMENT","OFFSET","POSITIONING","Overlay","insertFirst","autoPan","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPositioning","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","getOptions","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","expireCache","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","getCacheKeyForTileKey","_tileKey$substring$sp","_tileKey$substring$sp2","fromKey","hash","withinExtentAndZ","getFullTileRange","_LRUCache2","_tilecoord","TileCache","_LRUCache","pruneExceptNewestZ","TileRange","containsTileRange","VectorRenderTile","urlTileCoord","getSourceTiles","declutterExecutorGroups","loadingSourceTiles","hitDetectionImageData","replayState_","sourceTiles","errorTileKeys","wantedResolution","wrappedTileCoord","hasContext","getReplayState","renderedRenderOrder","renderedRevision","renderedTileResolution","renderedTileRevision","renderedTileZ","VectorTile","features_","onLoad","setFeatures","onError","_Geolocation","_Graticule","_ImageCanvas","_ImageTile","_Overlay","_TileCache","_TileRange","_VectorRenderTile","_VectorTile","ERROR_THRESHOLD","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","isNotFinite","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","u2","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","calculateSourceExtentResolution","triangulation","sources","renderEdges","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","_Triangulation","_reproj","ReprojTile","sourceTileGrid","targetTileGrid","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","reproject_","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","TILELOADSTART","TILELOADEND","TILELOADERROR","tmpTileCoord","DECIMALS","TileGrid","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordForCoordAndZ","getTileCoordResolution","opt_direction","tileCoordIntersectsViewport","fullTileRanges","_TileGrid","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","_tilegrid","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","tmpSize","tileOptions","zDirection","getTileCacheForProjection","covered","tileCoordKey","getGutterForProjection","setKey","getOpaque","getTileGridForProjection","getTile","getTileGrid","getTilePixelRatio","getTilePixelSize","scaleSize","getTileCoordForTileUrlFunction","updateCacheSize","tileCount","useTile","TileSourceEvent","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","nullTileUrlFunction","expandUrl","urls","startCharCode","charCodeAt","stopCharCode","charCode","stop","_TileEventType","_tileurlfunction","UrlTile","_TileSource","generateTileUrlFunction_","tileUrlFunction","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","tileState","TileEventType","setTileLoadFunction","setTileUrlFunction","_UrlTile2","TileImage","_UrlTile","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","tileUrl","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","DEFAULT_VERSION","appendParams","uri","params","keyParams","encodeURIComponent","qs","_TileImage2","_wms","_uri","TileWMS","_TileImage","transparent","params_","v13_","serverType_","serverType","hidpi_","hidpi","updateV13_","getKeyForParams_","getFeatureInfoUrl","projectionObj","sourceProjectionObj","tileExtent","bufferSize","baseParams","getRequestUrl_","getLegendUrl","isSingleLayer","mpu","pixelSize","getParams","dpi","updateParams","version","PRELOAD","USE_INTERIM_TILES_ON_ERROR","_TileProperty","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedPixelRatio","renderedProjection","renderedTiles","newTiles_","tmpTileRange_","isDrawableTile","tileSource","tileOrigin","viewResolution","viewCenter","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","toTransformString","clips","clipZs","currentClip","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","tileCallback","_BaseTile","_TileLayer","TileLayer","_BaseTileLayer","_ol2","_TileWMS","odmsrc","odmlayer","bundleURL","getBundleURLCached","getBundleURL","getBaseURL","bundle","updateLink","link","newLink","cloneNode","href","nextSibling","cssTimeout","reloadCSS","links","querySelectorAll","module","OVERLAY_ID","OldModule","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","JSON","parse","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","generated","js","hmrApply","v","hmrAcceptRun","reload","onclose","removeErrorOverlay","createErrorOverlay","stackTrace","innerText","getParents","modules","parents","dep","Function","deps","cached","cb"],"mappings":"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A,oBAAAtB,OAAA,CAAAnC,GAAA,uBAAAA,GAAA,YAAAyC,SAAA,4DAAAgB,IAAA,gBAAAF,MAAA,GAAAM,MAAA,EAAAL,KAAA,KAPrC;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9FA,IA+FM4sC,KAAK;EACT;AACF;AACA;EACE,SAAAA,MAAYtjC,OAAO,EAAE;IAAAtR,eAAA,OAAA40C,KAAA;IACnBtjC,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;;IAEvB;AACJ;AACA;AACA;IACI,IAAI,CAACujC,SAAS,GAAG,IAAI;;IAErB;AACJ;AACA;AACA;IACI,IAAI,CAACC,iBAAiB,GAAGC,uBAAuB;IAEhD,IAAIzjC,OAAO,CAACgC,QAAQ,KAAKlL,SAAS,EAAE;MAClC,IAAI,CAACmL,WAAW,CAACjC,OAAO,CAACgC,QAAQ,CAAC;IACpC;;IAEA;AACJ;AACA;AACA;IACI,IAAI,CAAC09B,KAAK,GAAG1/B,O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CnC/+E,KAAA,GAAAH,MAAA,CAAAM,IAAA,OAAMS,IAAI;;IAEV;AACJ;AACA;AACA;AACA;IACIZ,KAAA,CAAKi2C,OAAO,GAAGA,OAAO;;IAEtB;AACJ;AACA;AACA;AACA;IACIj2C,KAAA,CAAKszE,QAAQ,GAAGA,QAAQ;IAAC,OAAAtzE,KAAA;EAC3B;EAAC,OAAAK,YAAA,CAAA0+E,iBAAA;AAAA,EAtBoC5zE,eAAK;AAyB5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA1K,OAAA,CAAAs+E,iBAAA,GAAAA,iBAAA;AAAA,IAUMC,YAAY,0BAAAC,OAAA;EAAAr/E,SAAA,CAAAo/E,YAAA,EAAAC,OAAA;EAAA,IAAA5vE,OAAA,GAAAvP,YAAA,CAAAk/E,YAAA;EAChB;AACF;AACA;EACE,SAAAA,aAAYztE,OAAO,EAAE;IAAA,IAAAhC,MAAA;IAAAtP,eAAA,OAAA++E,YAAA;IACnBztE,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IAEvBhC,MAAA,GAAAF,OAAA,CAAAlP,IAAA,OAAM;MACJosD,YAAY,EAAEh7C,OAAO,CAACg7C,YAAY;MAClCzqB,WAAW,EAAE,IAAI;MACjBpgB,UAAU,EAAErZ,SAAS;M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C,GAAG,EAAE,EACN,EAAE,GAAG,IAAI,EACT,EAAE,GAAG,IAAI,EACT,EAAE,GAAG,IAAI,EACT,CAAC,GAAG,IAAI,EACR,CAAC,GAAG,IAAI,EACR,CAAC,GAAG,IAAI,CACT;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,IASMC,SAAS,0BAAAzL,YAAA;EAAAz6E,SAAA,CAAAkmF,SAAA,EAAAzL,YAAA;EAAA,IAAAx6E,MAAA,GAAAC,YAAA,CAAAgmF,SAAA;EACb;AACF;AACA;EACE,SAAAA,UAAYv0E,OAAO,EAAE;IAAA,IAAAvR,KAAA;IAAAC,eAAA,OAAA6lF,SAAA;IACnBv0E,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;IAEhC,IAAMo5C,WAAW,GAAGljD,MAAM,CAACqI,MAAM,CAC/B;MACEskD,oBAAoB,EAAE,IAAI;MAC1BC,sBAAsB,EAAE,IAAI;MAC5BF,YAAY,EAAE;IAChB,CAAC,EACD5iD,OACF,CAAC;IAED,OAAOo5C,WAAW,CAACo7B,QAAQ;IAC3B,OAAOp7B,WAAW,CAAChX,WAAW;IAC9B,OAAOgX,WAAW,CAACq7B,UAAU;IAC7B,OAAOr7B,WAAW,CAACs7B,UAAU;IAC7B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","file":"Map.a3dd3c4c.js","sourceRoot":"..","sourcesContent":["/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.5.1';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/Geolocation\n */\nimport BaseEvent from './events/Event.js';\nimport BaseObject from './Object.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  identityTransform,\n} from './proj.js';\nimport {toRadians} from './math.js';\n\n/**\n * @enum {string}\n */\nconst Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions',\n};\n\n/**\n * @enum string\n */\nconst GeolocationErrorType = {\n  /**\n   * Triggered when a `GeolocationPositionError` occurs.\n   * @event module:ol/Geolocation.GeolocationError#error\n   * @api\n   */\n  ERROR: 'error',\n};\n\n/**\n * @classdesc\n * Events emitted on [GeolocationPositionError](https://developer.mozilla.org/en-US/docs/Web/API/GeolocationPositionError).\n */\nexport class GeolocationError extends BaseEvent {\n  /**\n   * @param {GeolocationPositionError} error error object.\n   */\n  constructor(error) {\n    super(GeolocationErrorType.ERROR);\n\n    /**\n     * Code of the underlying `GeolocationPositionError`.\n     * @type {number}\n     * @api\n     */\n    this.code = error.code;\n\n    /**\n     * Message of the underlying `GeolocationPositionError`.\n     * @type {string}\n     * @api\n     */\n    this.message = error.message;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See https://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:accuracy'|'change:accuracyGeometry'|'change:altitude'|\n *    'change:altitudeAccuracy'|'change:heading'|'change:position'|'change:projection'|'change:speed'|'change:tracking'|\n *    'change:trackingOptions'} GeolocationObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<GeolocationObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'error', GeolocationError, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|GeolocationObjectEventTypes, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return>} GeolocationOnSignature\n */\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](https://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes and errors, register listeners for the generic\n * `change` event and the `error` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     const geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       console.log(geolocation.getPosition());\n *     });\n *     // listen to error\n *     geolocation.on('error', function(evt) {\n *       window.console.log(evt.message);\n *     });\n *\n * @fires GeolocationError\n * @api\n */\nclass Geolocation extends BaseObject {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GeolocationOnSignature<void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    this.addChangeListener(Property.PROJECTION, this.handleProjectionChanged_);\n    this.addChangeListener(Property.TRACKING, this.handleTrackingChanged_);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTracking(false);\n    super.disposeInternal();\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    const projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        projection\n      );\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleTrackingChanged_() {\n    if ('geolocation' in navigator) {\n      const tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions()\n        );\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPosition} position position event.\n   */\n  positionChange_(position) {\n    const coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(\n      Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude\n    );\n    this.set(\n      Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ? undefined : coords.altitudeAccuracy\n    );\n    this.set(\n      Property.HEADING,\n      coords.heading === null ? undefined : toRadians(coords.heading)\n    );\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    const projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition.slice());\n    this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n    const geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPositionError} error error object.\n   */\n  positionError_(error) {\n    this.dispatchEvent(new GeolocationError(error));\n  }\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAccuracy() {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  }\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  getAccuracyGeometry() {\n    return /** @type {?import(\"./geom/Polygon.js\").default} */ (\n      this.get(Property.ACCURACY_GEOMETRY) || null\n    );\n  }\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  getAltitude() {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  }\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAltitudeAccuracy() {\n    return /** @type {number|undefined} */ (\n      this.get(Property.ALTITUDE_ACCURACY)\n    );\n  }\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  getHeading() {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  }\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"./proj/Projection.js\").default|undefined} */ (\n      this.get(Property.PROJECTION)\n    );\n  }\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  getSpeed() {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  }\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  getTracking() {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  }\n\n  /**\n   * Get the tracking options.\n   * See https://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](https://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  getTrackingOptions() {\n    return /** @type {PositionOptions|undefined} */ (\n      this.get(Property.TRACKING_OPTIONS)\n    );\n  }\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  setTracking(tracking) {\n    this.set(Property.TRACKING, tracking);\n  }\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  setTrackingOptions(options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  }\n}\n\nexport default Geolocation;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   * @param {CanvasRenderingContext2D} [context] Canvas context. When provided, the image will be\n   *    drawn into the context's canvas, and `getImage()` will return the canvas once the image\n   *    has finished loading.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction,\n    context\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    if (\n      this.state == ImageState.LOADED &&\n      this.context_ &&\n      !(this.image_ instanceof HTMLCanvasElement)\n    ) {\n      const canvas = this.context_.canvas;\n      canvas.width = this.image_.width;\n      canvas.height = this.image_.height;\n      this.context_.drawImage(this.image_, 0, 0);\n      this.image_ = this.context_.canvas;\n    }\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (\n          image instanceof HTMLCanvasElement ||\n          (image.src && image.complete)\n        ) {\n          width = image.width;\n          height = image.height;\n        } else {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    const clone = new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    return clone;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `'text-placement': 'line'` or the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `'text-placement': 'point'`. For `'text-placement': 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `'text-placement': 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color. Specify `'none'` to avoid hit detection on the fill.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-width] Width of the icon. If not specified, the actual image width will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-height] Height of the icon. If not specified, the actual image height will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|null|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n  if (color === 'none') {\n    return null;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    repeat: flatStyle['text-repeat'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      width: flatStyle['icon-width'],\n      height: flatStyle['icon-height'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n\n/**\n * @return {import('./flat.js').FlatStyle} The default flat style.\n */\nexport function createDefaultStyle() {\n  return {\n    'fill-color': 'rgba(255,255,255,0.4)',\n    'stroke-color': '#3399CC',\n    'stroke-width': 1.25,\n    'circle-radius': 5,\n    'circle-fill-color': 'rgba(255,255,255,0.4)',\n    'circle-stroke-width': 1.25,\n    'circle-stroke-color': '#3399CC',\n  };\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style\n */\n\nexport {default as Circle} from './style/Circle.js';\nexport {default as Fill} from './style/Fill.js';\nexport {default as Icon} from './style/Icon.js';\nexport {default as IconImage} from './style/IconImage.js';\nexport {default as Image} from './style/Image.js';\nexport {default as RegularShape} from './style/RegularShape.js';\nexport {default as Stroke} from './style/Stroke.js';\nexport {default as Style} from './style/Style.js';\nexport {default as Text} from './style/Text.js';\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render.js';\n * import Fill from 'ol/style/Fill.js';\n * import Polygon from 'ol/geom/Polygon.js';\n *\n * const canvas = document.createElement('canvas');\n * const render = toContext(\n *     canvas.getContext('2d'),\n *     {size: [100, 100]}\n * );\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]])\n * );\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, options) {\n  const canvas = context.canvas;\n  options = options ? options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  if (!(event.context instanceof CanvasRenderingContext2D)) {\n    throw new Error('Only works for render events from Canvas 2D layers');\n  }\n\n  // canvas may be at a different pixel ratio than frameState.pixelRatio\n  const a = event.inversePixelTransform[0];\n  const b = event.inversePixelTransform[1];\n  const canvasPixelRatio = Math.sqrt(a * a + b * b);\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    canvasPixelRatio\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection\n    );\n  }\n\n  return new CanvasImmediateRenderer(\n    event.context,\n    canvasPixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  return applyTransform(event.inversePixelTransform, pixel.slice(0));\n}\n","/**\n * @module ol/geom/flat/geodesic\n */\nimport {get as getProjection, getTransform} from '../../proj.js';\nimport {squaredSegmentDistance, toDegrees, toRadians} from '../../math.js';\n\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (\n      squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) <\n      squaredTolerance\n    ) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(\n  lon1,\n  lat1,\n  lon2,\n  lat2,\n  projection,\n  squaredTolerance\n) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon =\n        toRadians(lon1) +\n        Math.atan2(\n          Math.sin(theta) * sinD * cosLat1,\n          cosD - sinLat1 * Math.sin(lat)\n        );\n      return [toDegrees(lon), toDegrees(lat)];\n    },\n    getTransform(geoProjection, projection),\n    squaredTolerance\n  );\n}\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon, lat1 + (lat2 - lat1) * frac];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance\n  );\n}\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon1 + (lon2 - lon1) * frac, lat];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance\n  );\n}\n","/**\n * @module ol/layer/Graticule\n */\nimport Collection from '../Collection.js';\nimport EventType from '../render/EventType.js';\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport VectorLayer from './Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  applyTransform,\n  approximatelyEquals,\n  containsCoordinate,\n  containsExtent,\n  equals,\n  getCenter,\n  getIntersection,\n  getWidth,\n  intersects,\n  isEmpty,\n  wrapX as wrapExtentX,\n} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {degreesToStringHDMS} from '../coordinate.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n} from '../proj.js';\nimport {getVectorContext} from '../render.js';\nimport {meridian, parallel} from '../geom/flat/geodesic.js';\n\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)',\n});\n\n/**\n * @type {Array<number>}\n * @private\n */\nconst INTERVALS = [\n  90,\n  45,\n  30,\n  20,\n  10,\n  5,\n  2,\n  1,\n  30 / 60,\n  20 / 60,\n  10 / 60,\n  5 / 60,\n  2 / 60,\n  1 / 60,\n  30 / 3600,\n  20 / 3600,\n  10 / 3600,\n  5 / 3600,\n  2 / 3600,\n  1 / 3600,\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom Geometry.\n * @property {string} text Text.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle] The\n * stroke style to use for drawing the graticule. If not provided, the following stroke will be used:\n * ```js\n * new Stroke({\n *   color: 'rgba(0, 0, 0, 0.2)' // a not fully opaque black\n * });\n * ```\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 30/60, 20/60, 10/60, 5/60, 2/60, 1/60, 30/3600, 20/3600, 10/3600, 5/3600, 2/3600, 1/3600]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system (currently only EPSG:4326 is supported).\n * Note that the view projection must define both extent and worldExtent.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass Graticule extends VectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign(\n      {\n        updateWhileAnimating: true,\n        updateWhileInteracting: true,\n        renderBuffer: 0,\n      },\n      options\n    );\n\n    delete baseOptions.maxLines;\n    delete baseOptions.strokeStyle;\n    delete baseOptions.targetSize;\n    delete baseOptions.showLabels;\n    delete baseOptions.lonLabelFormatter;\n    delete baseOptions.latLabelFormatter;\n    delete baseOptions.lonLabelPosition;\n    delete baseOptions.latLabelPosition;\n    delete baseOptions.lonLabelStyle;\n    delete baseOptions.latLabelStyle;\n    delete baseOptions.intervals;\n    super(baseOptions);\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLat_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLon_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLat_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLon_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxX_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxY_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minX_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minY_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.targetSize_ =\n      options.targetSize !== undefined ? options.targetSize : 100;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.meridians_ = [];\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.parallels_ = [];\n\n    /**\n     * @type {Stroke}\n     * @private\n     */\n    this.strokeStyle_ =\n      options.strokeStyle !== undefined\n        ? options.strokeStyle\n        : DEFAULT_STROKE_STYLE;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.fromLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.toLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.projectionCenterLonLat_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomRight_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topRight_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.meridiansLabels_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.parallelsLabels_ = null;\n\n    if (options.showLabels) {\n      /**\n       * @type {null|function(number):string}\n       * @private\n       */\n      this.lonLabelFormatter_ =\n        options.lonLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'EW')\n          : options.lonLabelFormatter;\n\n      /**\n       * @type {function(number):string}\n       * @private\n       */\n      this.latLabelFormatter_ =\n        options.latLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'NS')\n          : options.latLabelFormatter;\n\n      /**\n       * Longitude label position in fractions (0..1) of view extent. 0 means\n       * bottom, 1 means top.\n       * @type {number}\n       * @private\n       */\n      this.lonLabelPosition_ =\n        options.lonLabelPosition == undefined ? 0 : options.lonLabelPosition;\n\n      /**\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n       * means right.\n       * @type {number}\n       * @private\n       */\n      this.latLabelPosition_ =\n        options.latLabelPosition == undefined ? 1 : options.latLabelPosition;\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.lonLabelStyleBase_ = new Style({\n        text:\n          options.lonLabelStyle !== undefined\n            ? options.lonLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textBaseline: 'bottom',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.lonLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.lonLabelStyleBase_.getText().setText(label);\n        return this.lonLabelStyleBase_;\n      };\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.latLabelStyleBase_ = new Style({\n        text:\n          options.latLabelStyle !== undefined\n            ? options.latLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textAlign: 'right',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.latLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.latLabelStyleBase_.getText().setText(label);\n        return this.latLabelStyleBase_;\n      };\n\n      this.meridiansLabels_ = [];\n      this.parallelsLabels_ = [];\n\n      this.addEventListener(EventType.POSTRENDER, this.drawLabels_.bind(this));\n    }\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.intervals_ =\n      options.intervals !== undefined ? options.intervals : INTERVALS;\n\n    // use a source with a custom loader for lines & text\n    this.setSource(\n      new VectorSource({\n        loader: this.loaderFunction.bind(this),\n        strategy: this.strategyFunction.bind(this),\n        features: new Collection(),\n        overlaps: false,\n        useSpatialIndex: false,\n        wrapX: options.wrapX,\n      })\n    );\n\n    /**\n     * feature pool to use when updating graticule\n     * @type {Array<Feature>}\n     * @private\n     */\n    this.featurePool_ = [];\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.lineStyle_ = new Style({\n      stroke: this.strokeStyle_,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.loadedExtent_ = null;\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.renderedResolution_ = null;\n\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Strategy function for loading features based on the view's extent and\n   * resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<import(\"../extent.js\").Extent>} Extents.\n   */\n  strategyFunction(extent, resolution) {\n    // extents may be passed in different worlds, to avoid endless loop we use only one\n    let realWorldExtent = extent.slice();\n    if (this.projection_ && this.getSource().getWrapX()) {\n      wrapExtentX(realWorldExtent, this.projection_);\n    }\n    if (this.loadedExtent_) {\n      if (\n        approximatelyEquals(this.loadedExtent_, realWorldExtent, resolution)\n      ) {\n        // make sure result is exactly equal to previous extent\n        realWorldExtent = this.loadedExtent_.slice();\n      } else {\n        // we should not keep track of loaded extents\n        this.getSource().removeLoadedExtent(this.loadedExtent_);\n      }\n    }\n    return [realWorldExtent];\n  }\n\n  /**\n   * Update geometries in the source based on current view\n   * @param {import(\"../extent\").Extent} extent Extent\n   * @param {number} resolution Resolution\n   * @param {import(\"../proj/Projection.js\").default} projection Projection\n   */\n  loaderFunction(extent, resolution, projection) {\n    this.loadedExtent_ = extent;\n    const source = this.getSource();\n\n    // only consider the intersection between our own extent & the requested one\n    const layerExtent = this.getExtent() || [\n      -Infinity,\n      -Infinity,\n      Infinity,\n      Infinity,\n    ];\n    const renderExtent = getIntersection(layerExtent, extent);\n\n    if (\n      this.renderedExtent_ &&\n      equals(this.renderedExtent_, renderExtent) &&\n      this.renderedResolution_ === resolution\n    ) {\n      return;\n    }\n    this.renderedExtent_ = renderExtent;\n    this.renderedResolution_ = resolution;\n\n    // bail out if nothing to render\n    if (isEmpty(renderExtent)) {\n      return;\n    }\n\n    // update projection info\n    const center = getCenter(renderExtent);\n    const squaredTolerance = (resolution * resolution) / 4;\n\n    const updateProjectionInfo =\n      !this.projection_ || !equivalentProjection(this.projection_, projection);\n\n    if (updateProjectionInfo) {\n      this.updateProjectionInfo_(projection);\n    }\n\n    this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n\n    // first make sure we have enough features in the pool\n    let featureCount = this.meridians_.length + this.parallels_.length;\n    if (this.meridiansLabels_) {\n      featureCount += this.meridians_.length;\n    }\n    if (this.parallelsLabels_) {\n      featureCount += this.parallels_.length;\n    }\n\n    let feature;\n    while (featureCount > this.featurePool_.length) {\n      feature = new Feature();\n      this.featurePool_.push(feature);\n    }\n\n    const featuresColl = source.getFeaturesCollection();\n    featuresColl.clear();\n    let poolIndex = 0;\n\n    // add features for the lines & labels\n    let i, l;\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.meridians_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.parallels_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, index) {\n    const lineString = this.getMeridian_(\n      lon,\n      minLat,\n      maxLat,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.meridiansLabels_) {\n        const text = this.lonLabelFormatter_(lon);\n        if (index in this.meridiansLabels_) {\n          this.meridiansLabels_[index].text = text;\n        } else {\n          this.meridiansLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.meridians_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addParallel_(lat, minLon, maxLon, squaredTolerance, extent, index) {\n    const lineString = this.getParallel_(\n      lat,\n      minLon,\n      maxLon,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.parallelsLabels_) {\n        const text = this.latLabelFormatter_(lat);\n        if (index in this.parallelsLabels_) {\n          this.parallelsLabels_[index].text = text;\n        } else {\n          this.parallelsLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.parallels_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Render event.\n   * @private\n   */\n  drawLabels_(event) {\n    const rotation = event.frameState.viewState.rotation;\n    const resolution = event.frameState.viewState.resolution;\n    const size = event.frameState.size;\n    const extent = event.frameState.extent;\n    const rotationCenter = getCenter(extent);\n    let rotationExtent = extent;\n    if (rotation) {\n      const unrotatedWidth = size[0] * resolution;\n      const unrotatedHeight = size[1] * resolution;\n      rotationExtent = [\n        rotationCenter[0] - unrotatedWidth / 2,\n        rotationCenter[1] - unrotatedHeight / 2,\n        rotationCenter[0] + unrotatedWidth / 2,\n        rotationCenter[1] + unrotatedHeight / 2,\n      ];\n    }\n\n    let startWorld = 0;\n    let endWorld = 0;\n    let labelsAtStart = this.latLabelPosition_ < 0.5;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      startWorld = Math.floor((extent[0] - projectionExtent[0]) / worldWidth);\n      endWorld = Math.ceil((extent[2] - projectionExtent[2]) / worldWidth);\n      const inverted = Math.abs(rotation) > Math.PI / 2;\n      labelsAtStart = labelsAtStart !== inverted;\n    }\n    const vectorContext = getVectorContext(event);\n\n    for (let world = startWorld; world <= endWorld; ++world) {\n      let poolIndex = this.meridians_.length + this.parallels_.length;\n      let feature, index, l, textPoint;\n\n      if (this.meridiansLabels_) {\n        for (index = 0, l = this.meridiansLabels_.length; index < l; ++index) {\n          const lineString = this.meridians_[index];\n          if (!rotation && world === 0) {\n            textPoint = this.getMeridianPoint_(lineString, extent, index);\n          } else {\n            const clone = lineString.clone();\n            clone.translate(world * worldWidth, 0);\n            clone.rotate(-rotation, rotationCenter);\n            textPoint = this.getMeridianPoint_(clone, rotationExtent, index);\n            textPoint.rotate(rotation, rotationCenter);\n          }\n          feature = this.featurePool_[poolIndex++];\n          feature.setGeometry(textPoint);\n          feature.set('graticule_label', this.meridiansLabels_[index].text);\n          vectorContext.drawFeature(feature, this.lonLabelStyle_(feature));\n        }\n      }\n      if (this.parallelsLabels_) {\n        if (\n          (world === startWorld && labelsAtStart) ||\n          (world === endWorld && !labelsAtStart)\n        ) {\n          for (index = 0, l = this.parallels_.length; index < l; ++index) {\n            const lineString = this.parallels_[index];\n            if (!rotation && world === 0) {\n              textPoint = this.getParallelPoint_(lineString, extent, index);\n            } else {\n              const clone = lineString.clone();\n              clone.translate(world * worldWidth, 0);\n              clone.rotate(-rotation, rotationCenter);\n              textPoint = this.getParallelPoint_(clone, rotationExtent, index);\n              textPoint.rotate(rotation, rotationCenter);\n            }\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(textPoint);\n            feature.set('graticule_label', this.parallelsLabels_[index].text);\n            vectorContext.drawFeature(feature, this.latLabelStyle_(feature));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @private\n   */\n  createGraticule_(extent, center, resolution, squaredTolerance) {\n    const interval = this.getInterval_(resolution);\n    if (interval == -1) {\n      this.meridians_.length = 0;\n      this.parallels_.length = 0;\n      if (this.meridiansLabels_) {\n        this.meridiansLabels_.length = 0;\n      }\n      if (this.parallelsLabels_) {\n        this.parallelsLabels_.length = 0;\n      }\n      return;\n    }\n\n    let wrapX = false;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      if (getWidth(extent) >= worldWidth) {\n        extent[0] = projectionExtent[0];\n        extent[2] = projectionExtent[2];\n      } else {\n        wrapX = true;\n      }\n    }\n\n    // Constrain the center to fit into the extent available to the graticule\n\n    const validCenterP = [\n      clamp(center[0], this.minX_, this.maxX_),\n      clamp(center[1], this.minY_, this.maxY_),\n    ];\n\n    // Transform the center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    const centerLonLat = this.toLonLatTransform_(validCenterP);\n    if (isNaN(centerLonLat[1])) {\n      centerLonLat[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n    let centerLon = clamp(centerLonLat[0], this.minLon_, this.maxLon_);\n    let centerLat = clamp(centerLonLat[1], this.minLat_, this.maxLat_);\n    const maxLines = this.maxLines_;\n    let cnt, idx, lat, lon;\n\n    // Limit the extent to fit into the extent available to the graticule\n\n    let validExtentP = extent;\n    if (!wrapX) {\n      validExtentP = [\n        clamp(extent[0], this.minX_, this.maxX_),\n        clamp(extent[1], this.minY_, this.maxY_),\n        clamp(extent[2], this.minX_, this.maxX_),\n        clamp(extent[3], this.minY_, this.maxY_),\n      ];\n    }\n\n    // Transform the extent to get the lon lat ranges for the edges of the extent\n\n    const validExtent = applyTransform(\n      validExtentP,\n      this.toLonLatTransform_,\n      undefined,\n      8\n    );\n\n    let maxLat = validExtent[3];\n    let maxLon = validExtent[2];\n    let minLat = validExtent[1];\n    let minLon = validExtent[0];\n\n    if (!wrapX) {\n      // Check if extremities of the world extent lie inside the extent\n      // (for example the pole in a polar projection)\n      // and extend the extent as appropriate\n\n      if (containsCoordinate(validExtentP, this.bottomLeft_)) {\n        minLon = this.minLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.bottomRight_)) {\n        maxLon = this.maxLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topLeft_)) {\n        minLon = this.minLon_;\n        maxLat = this.maxLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topRight_)) {\n        maxLon = this.maxLon_;\n        maxLat = this.maxLat_;\n      }\n\n      // The transformed center may also extend the lon lat ranges used for rendering\n\n      maxLat = clamp(maxLat, centerLat, this.maxLat_);\n      maxLon = clamp(maxLon, centerLon, this.maxLon_);\n      minLat = clamp(minLat, this.minLat_, centerLat);\n      minLon = clamp(minLon, this.minLon_, centerLon);\n    }\n\n    // Create meridians\n\n    centerLon = Math.floor(centerLon / interval) * interval;\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon -= interval) >= minLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.minLon_ && cnt++ < maxLines) {\n        lon = Math.max(lon - interval, this.minLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon += interval) <= maxLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.maxLon_ && cnt++ < maxLines) {\n        lon = Math.min(lon + interval, this.maxLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    this.meridians_.length = idx;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = idx;\n    }\n\n    // Create parallels\n\n    centerLat = Math.floor(centerLat / interval) * interval;\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lat != this.minLat_ && cnt++ < maxLines) {\n      lat = Math.max(lat - interval, this.minLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    cnt = 0;\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\n      lat = Math.min(lat + interval, this.maxLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    this.parallels_.length = idx;\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = idx;\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @return {number} The interval in degrees.\n   * @private\n   */\n  getInterval_(resolution) {\n    const centerLon = this.projectionCenterLonLat_[0];\n    const centerLat = this.projectionCenterLonLat_[1];\n    let interval = -1;\n    const target = Math.pow(this.targetSize_ * resolution, 2);\n    /** @type {Array<number>} **/\n    const p1 = [];\n    /** @type {Array<number>} **/\n    const p2 = [];\n    for (let i = 0, ii = this.intervals_.length; i < ii; ++i) {\n      const delta = clamp(this.intervals_[i] / 2, 0, 90);\n      // Don't attempt to transform latitudes beyond the poles!\n      const clampedLat = clamp(centerLat, -90 + delta, 90 - delta);\n      p1[0] = centerLon - delta;\n      p1[1] = clampedLat - delta;\n      p2[0] = centerLon + delta;\n      p2[1] = clampedLat + delta;\n      this.fromLonLatTransform_(p1, p1);\n      this.fromLonLatTransform_(p2, p2);\n      const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n      if (dist <= target) {\n        break;\n      }\n      interval = this.intervals_[i];\n    }\n    return interval;\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The meridian line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getMeridian_(lon, minLat, maxLat, squaredTolerance, index) {\n    const flatCoordinates = meridian(\n      lon,\n      minLat,\n      maxLat,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.meridians_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n      this.meridians_[index] = lineString;\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Meridian\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Meridian point.\n   * @private\n   */\n  getMeridianPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let bottom = 1;\n    let top = flatCoordinates.length - 1;\n    if (flatCoordinates[bottom] > flatCoordinates[top]) {\n      bottom = top;\n      top = 1;\n    }\n    const clampedBottom = Math.max(extent[1], flatCoordinates[bottom]);\n    const clampedTop = Math.min(extent[3], flatCoordinates[top]);\n    const lat = clamp(\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n      clampedBottom,\n      clampedTop\n    );\n    const coordinate0 =\n      flatCoordinates[bottom - 1] +\n      ((flatCoordinates[top - 1] - flatCoordinates[bottom - 1]) *\n        (lat - flatCoordinates[bottom])) /\n        (flatCoordinates[top] - flatCoordinates[bottom]);\n    const coordinate = [coordinate0, lat];\n    const point = this.meridiansLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of meridians.  Meridians are lines of equal longitude.\n   * @return {Array<LineString>} The meridians.\n   * @api\n   */\n  getMeridians() {\n    return this.meridians_;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The parallel line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getParallel_(lat, minLon, maxLon, squaredTolerance, index) {\n    const flatCoordinates = parallel(\n      lat,\n      minLon,\n      maxLon,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.parallels_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Parallels.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Parallel point.\n   * @private\n   */\n  getParallelPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let left = 0;\n    let right = flatCoordinates.length - 2;\n    if (flatCoordinates[left] > flatCoordinates[right]) {\n      left = right;\n      right = 0;\n    }\n    const clampedLeft = Math.max(extent[0], flatCoordinates[left]);\n    const clampedRight = Math.min(extent[2], flatCoordinates[right]);\n    const lon = clamp(\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n      clampedLeft,\n      clampedRight\n    );\n    const coordinate1 =\n      flatCoordinates[left + 1] +\n      ((flatCoordinates[right + 1] - flatCoordinates[left + 1]) *\n        (lon - flatCoordinates[left])) /\n        (flatCoordinates[right] - flatCoordinates[left]);\n    const coordinate = [lon, coordinate1];\n    const point = this.parallelsLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of parallels.  Parallels are lines of equal latitude.\n   * @return {Array<LineString>} The parallels.\n   * @api\n   */\n  getParallels() {\n    return this.parallels_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateProjectionInfo_(projection) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const worldExtent = projection.getWorldExtent();\n\n    this.maxLat_ = worldExtent[3];\n    this.maxLon_ = worldExtent[2];\n    this.minLat_ = worldExtent[1];\n    this.minLon_ = worldExtent[0];\n\n    // If the world extent crosses the dateline define a custom transform to\n    // return longitudes which wrap the dateline\n\n    const toLonLatTransform = getTransform(projection, epsg4326Projection);\n    if (this.minLon_ < this.maxLon_) {\n      this.toLonLatTransform_ = toLonLatTransform;\n    } else {\n      const split = this.minLon_ + this.maxLon_ / 2;\n      this.maxLon_ += 360;\n      this.toLonLatTransform_ = function (coordinates, output, dimension) {\n        dimension = dimension || 2;\n        const lonLatCoordinates = toLonLatTransform(\n          coordinates,\n          output,\n          dimension\n        );\n        for (let i = 0, l = lonLatCoordinates.length; i < l; i += dimension) {\n          if (lonLatCoordinates[i] < split) {\n            lonLatCoordinates[i] += 360;\n          }\n        }\n        return lonLatCoordinates;\n      };\n    }\n\n    // Transform the extent to get the limits of the view projection extent\n    // which should be available to the graticule\n\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n    const worldExtentP = applyTransform(\n      [this.minLon_, this.minLat_, this.maxLon_, this.maxLat_],\n      this.fromLonLatTransform_,\n      undefined,\n      8\n    );\n\n    this.minX_ = worldExtentP[0];\n    this.maxX_ = worldExtentP[2];\n    this.minY_ = worldExtentP[1];\n    this.maxY_ = worldExtentP[3];\n\n    // Determine the view projection coordinates of the extremities of the world extent\n    // as these may lie inside a view extent (for example the pole in a polar projection)\n\n    this.bottomLeft_ = this.fromLonLatTransform_([this.minLon_, this.minLat_]);\n    this.bottomRight_ = this.fromLonLatTransform_([this.maxLon_, this.minLat_]);\n    this.topLeft_ = this.fromLonLatTransform_([this.minLon_, this.maxLat_]);\n    this.topRight_ = this.fromLonLatTransform_([this.maxLon_, this.maxLat_]);\n\n    // Transform the projection center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(\n      getCenter(projection.getExtent())\n    );\n    if (isNaN(this.projectionCenterLonLat_[1])) {\n      this.projectionCenterLonLat_[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n\n    this.projection_ = projection;\n  }\n}\n\nexport default Graticule;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    frameState.declutterTree = null;\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol\n */\n\nexport {default as AssertionError} from './AssertionError.js';\nexport {default as Collection} from './Collection.js';\nexport {default as Disposable} from './Disposable.js';\nexport {default as Feature} from './Feature.js';\nexport {default as Geolocation} from './Geolocation.js';\nexport {default as Graticule} from './layer/Graticule.js';\nexport {default as Image} from './Image.js';\nexport {default as ImageBase} from './ImageBase.js';\nexport {default as ImageCanvas} from './ImageCanvas.js';\nexport {default as ImageTile} from './ImageTile.js';\nexport {default as Kinetic} from './Kinetic.js';\nexport {default as Map} from './Map.js';\nexport {default as MapBrowserEvent} from './MapBrowserEvent.js';\nexport {default as MapBrowserEventHandler} from './MapBrowserEventHandler.js';\nexport {default as MapEvent} from './MapEvent.js';\nexport {default as Object} from './Object.js';\nexport {default as Observable} from './Observable.js';\nexport {default as Overlay} from './Overlay.js';\nexport {default as Tile} from './Tile.js';\nexport {default as TileCache} from './TileCache.js';\nexport {default as TileQueue} from './TileQueue.js';\nexport {default as TileRange} from './TileRange.js';\nexport {default as VectorRenderTile} from './VectorRenderTile.js';\nexport {default as VectorTile} from './VectorTile.js';\nexport {default as View} from './View.js';\n\nexport {getUid, VERSION} from './util.js';\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/wms\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_VERSION = '1.3.0';\n\n/**\n * @api\n * @typedef {'carmentaserver' | 'geoserver' | 'mapserver' | 'qgis'} ServerType\n * Set the server type to use implementation-specific parameters beyond the WMS specification.\n *  - `'carmentaserver'`: HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n *  - `'geoserver'`: HiDPI support for [GeoServer](https://geoserver.org/)\n *  - `'mapserver'`: HiDPI support for [MapServer](https://mapserver.org/)\n *  - `'qgis'`: HiDPI support for [QGIS](https://qgis.org/)\n */\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n","/**\n * @module ol/source/TileWMS\n */\n\nimport TileImage from './TileImage.js';\nimport {DEFAULT_VERSION} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {buffer as bufferSize, scale as scaleSize, toSize} from '../size.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {modulo} from '../math.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See https://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options} [options] Tile WMS options.\n   */\n  constructor(options) {\n    options = options ? options : /** @type {Options} */ ({});\n\n    const params = Object.assign({}, options.params);\n\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    const z = tileGrid.getZForResolution(resolution, this.zDirection);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        tileResolution\n      );\n      tileExtent = transformExtent(\n        tileExtent,\n        projectionObj,\n        sourceProjectionObj\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(baseParams, this.params_, params);\n\n    const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case 'geoserver':\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case 'mapserver':\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case 'carmentaserver':\n        case 'qgis':\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default: // Unknown `serverType` configured\n          assert(false, 52);\n          break;\n      }\n    }\n\n    const axisOrientation = projection.getAxisOrientation();\n    const bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      let tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    Object.assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams\n    );\n  }\n}\n\nexport default TileWMS;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","import 'ol/ol.css';\r\nimport {Map,View} from \"ol/\";\r\nimport TileWMS from 'ol/source/TileWMS';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport Projection  from 'ol/proj/Projection';\r\n//import { Image as ImageLayer } from 'ol/layer'; \r\n//import ImageWMS from 'ol/source/ImageWMS';\r\n\r\n//const serverurl=\"http://192.168.6.228:8080/geoserver/wms\";\r\n\r\nconst projection=new Projection({\r\ncode:'EPSG:32643',\r\n   units:'m',\r\n   axisOrientation:'neu',\r\n   global:false\r\n});\r\n\r\nconst odmsrc= new TileWMS({\r\n    url:\"http://localhost:8080/geoserver/ODM/wms\",\r\n    params:{\r\n        \"LAYERS\":\"ODM:odm_orthophoto\",\r\n        \"VERSION\":\"1.1.1\",\r\n        \"FORMAT\":\"image/jpeg\"\r\n\r\n    }\r\n});\r\nconst odmlayer=new TileLayer({\r\n    source:odmsrc\r\n    \r\n\r\n})\r\n\r\n\r\n\r\n\r\n\r\nconst view=new View({\r\n    projection:projection,\r\n    center:[365593.46172,1761637.27518],\r\n    zoom:0,\r\n    extent:[365371.1684157285,1761402.4960644639,365811.13917368726,1761790.86618869]\r\n\r\n})\r\n\r\nconst map=new Map({\r\n    target:\"map\",\r\n    layers:[odmlayer],\r\n    view:view\r\n\r\n})\r\n\r\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}